{"version":3,"sources":["components/descriptions/addition-subtraction/shcema-small-screen-arrows.png","components/descriptions/addition-subtraction/shcema-big-screen-arrows.png","components/navigation/siteMenu.js","components/addition-subtraction/types.js","pages/addition-subtraction/initial-problem-settings.js","components/icons-svg/icon-chevron-down.component.jsx","components/collapsible/collapsible.component.jsx","components/descriptions/multiplication-table/how-multitab-works.component.jsx","components/toggler/toggler.component.jsx","components/headers/multiplication-tab/header.component.jsx","components/icons-svg/icon-heart.component.jsx","components/icons-svg/icon-lx-kish.component.jsx","components/footer/footer.component.jsx","table.content.js","components/multiplication-tab/tab-header/tab-header.component.jsx","components/multiplication-tab/tab-empty-line/tab-empty-line.component.jsx","components/input-fields/number-input-field.component.jsx","components/icons-svg/icon-circle.component.jsx","components/multiplication-tab/tab-cell/tab-cell.component.jsx","components/multiplication-tab/tab-empty-cell/tab-empty-cell.component.jsx","components/multiplication-tab/tab-line/tab-line.component.jsx","components/multiplication-tab/table/tab.component.jsx","components/navigation/burger icon/icon-burger.component.jsx","components/navigation/slide bar/slide-bar.component.jsx","components/navigation/navigation-bar/navigation-bar.component.jsx","pages/multiplication-tab/multiplication-tab.page.jsx","components/descriptions/math-theory/strategies/counting-on.component.jsx","components/descriptions/math-theory/strategies/make-a-ten.component.jsx","components/descriptions/math-theory/strategies/decomposing.component.jsx","components/descriptions/math-theory/strategies/equal-addition.component.jsx","components/descriptions/math-theory/strategies/compensation.component.jsx","components/descriptions/addition-subtraction/math.component.jsx","components/descriptions/addition-subtraction/problem-types/up-to-ten.component.jsx","components/descriptions/addition-subtraction/problem-types/single-digit-operands.component.jsx","components/descriptions/addition-subtraction/problem-types/two-and-single-digits.component.jsx","components/descriptions/addition-subtraction/problem-types/two-digit-and-tens.component.jsx","components/descriptions/addition-subtraction/problem-types/two-digit-operands.component.jsx","components/descriptions/addition-subtraction/problem-types/two-digit-tidying-up.component.jsx","components/descriptions/addition-subtraction/how-addition-subtraction-works.component.jsx","components/headers/addition-subtraction/header.component.jsx","components/settings/settings.component.jsx","components/number/number.component.jsx","components/sign/sign.component.jsx","components/addition-subtraction/problem/problem.component.jsx","components/addition-subtraction/problems/problems.component.jsx","components/math/randoms/get-random-integer-in-a-range.js","components/math/problem-processing/get-input-position.js","components/math/operands-generators/up-to-ten.js","components/math/operands-generators/single-digit-operands.js","components/math/operands-generators/two-and-single-digits.js","components/math/operands-generators/two-digit-and-tens.js","components/math/operands-generators/two-digit-operands.js","components/math/operands-generators/two-digit-tidying-up.js","components/math/problem-processing/operands-factory.js","components/math/problem-processing/problems-factory.js","components/math/problems-controller.js","utils/state-update-tracer/state-update-tracer.js","pages/addition-subtraction/addition-subtraction.page.jsx","routes.jsx","index.js"],"names":["module","exports","name","link","className","operation","type","missing","numberOfOperands","quantity","IconChevronDown","props","xmlns","width","height","viewBox","d","Collapsible","React","useState","display","setDisplay","collapsibleClassName","titleClassName","title","id","checked","onChange","htmlFor","iconBoxClassName","iconClassName","Fragment","content","borderBottom","HowMultitabWorks","subtract","Toggler","toggleBox","label","span","left","text","input","right","Header","setSubtract","IconHeart","IconLxKish","aria-labelledby","points","Footer","href","target","rel","TabContent","styles","0","1","2","3","4","5","6","7","8","9","10","TabHeader","Array","map","x","i","j","key","sign","EmptyLine","NumberInputField","handleKeyDown","e","which","value","length","max","Number","isNaN","applyKeyDown","preventDefault","index","pattern","inputMode","defaultValue","placeholder","min","parseInt","step","onKeyDown","event","IconCircle","TabCell","getRoundedHalfANumber","aNumber","Math","round","getTopLineDotsAmount","line","TabEmptyCell","TabLine","Tab","IconBurger","open","setOpen","onClick","SlideBar","links","hideSliderMenu","to","element","showLinks","NavigationBar","siteMenu","MultiplicationTab","sticky","fullState","setFullState","menuRef","useRef","getHeaderOffsetTop","header","document","getElementById","offsetTop","useEffect","scrollCallBack","window","addEventListener","pageYOffset","classList","add","remove","removeEventListener","resizeCallBack","inputs","getElementsByClassName","from","emptyInputs","setChecked","CountingOn","paragraphClassName","MakeATen","Decomposing","EqualAddition","Compensation","UpToTen","SingleDigitOperands","TwoAndSingleDigits","TwoDigitAndTens","TwoDigitOperands","TwoDigitTidingUp","HowAdditionSubtractionWorks","srcSet","schemaSmallScreen","media","schemaBigScreen","alt","ProblemSettings","problemSettings","settings","deleteSettings","newProblemSettings","slice","push","setStateOnChange","setStateOnRadioChange","fieldName","indexOf","setting","types","validProblemSettings","filter","sendData","number","toString","digit","Sign","Problem","renderProblem","operand","renderedElement","Problems","arr","cols","getContent","problems","columns","ceil","rows","row","idx","problem","y","getRandomIntegerInARange","incomeMin","incomeMax","floor","random","Error","getInputPosition","randomInteger","console","log","upToTen","zero","problemMaximum","operands","problemSum","splice","singleDigitOperands","doubleAndSingleDigits","sort","a","b","doubleDigitAndTens","doubleDigitOperands","doubleDigitTidingUp","compensation","operandsFactory","processor","twoAndSingleDigits","twoDigitAndTens","twoDigitOperands","twoDigitTidyngUp","problemsFactory","q","problemsController","problemDescriptions","forEach","Date","useTraceUpdate","prev","changedProps","Object","entries","reduce","ps","k","v","current","keys","AdditionSubtraction","initialProblemSettings","colsPerRow","problemController","Routes","path","exact","component","ReactDOM","render","StrictMode","basename","process"],"mappings":"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","file":"static/js/main.e9d16953.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shcema-small-screen-arrows.356deef3.png\";","module.exports = __webpack_public_path__ + \"static/media/shcema-big-screen-arrows.f92264ab.png\";","module.exports = [\r\n  {\r\n    name: 'Multiplication table',\r\n    link: '/multiplication-tab',\r\n    // link: '/multiplay-react/multiplication-tab',\r\n    className: ''\r\n  },\r\n  {\r\n    name: 'Addition and Subtraction',\r\n    link: '/addition-subtraction',\r\n    // link: '/multiplay-react/addition-subtraction',\r\n    className: ''\r\n  },\r\n];","module.exports = [\r\n  'up to ten',\r\n  'single digit operands',\r\n  'two- and single- digit',\r\n  'two-digit and tens',\r\n  'two-digit operands',\r\n  'two-digit tidying up',\r\n  // 'tens within thousand',\r\n];","module.exports = [\r\n  {\r\n    operation: 'addition',\r\n    type: 'up to ten',\r\n    missing: 'result',\r\n    numberOfOperands: 2,\r\n    quantity: 8\r\n  }\r\n];","import React from 'react';\r\n\r\nconst IconChevronDown = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconChevronDown;","import React from 'react';\r\n\r\nimport IconChevronDown from '../icons-svg/icon-chevron-down.component';\r\n\r\nconst Collapsible = (props) => {\r\n\t// console.log('Header multitab props ===> ', props.setSubtract);\r\n\t// console.log('Header multitab props ===> ', props.setChecked);\r\n\r\n\tconst [ display, setDisplay ] = React.useState(false);\r\n\r\n\tconst showCollapsible = () => {\r\n\t\treturn display ? (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{props.content}\r\n\t\t\t\t{props.borderBottom ? <hr className=\"header__hr\" /> : null}\r\n\t\t\t</React.Fragment>\r\n\t\t) : null;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={props?.collapsibleClassName}>\r\n\t\t\t{/* <hr className=\"header__hr\" /> */}\r\n\t\t\t<h3 className={props?.titleClassName}>{props.title}</h3>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tclassName=\"collapsible__btn\"\r\n\t\t\t\tid={props.id}\r\n\t\t\t\tchecked={display}\r\n\t\t\t\tonChange={() => setDisplay(!display)}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor={props.id} className={props?.iconBoxClassName}>\r\n\t\t\t\t<IconChevronDown className={props?.iconClassName} />\r\n\t\t\t</label>\r\n\t\t\t<hr className=\"header__hr\" />\r\n\t\t\t{showCollapsible()}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Collapsible;\r\n","import React from 'react';\r\n\r\nconst HowMultitabWorks = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"description\">\r\n\t\t\t<p className=\"description__paragraph description__paragraph--level-one\">\r\n\t\t\t\t{props.subtract ? (\r\n\t\t\t\t\t`- Subtract the amount of dots under the field from the number from the left.`\r\n\t\t\t\t) : (\r\n\t\t\t\t\t`- Add the amount of dots under the field to the number from the left.`\r\n\t\t\t\t)}\r\n\t\t\t\t<br />\r\n\t\t\t\t- Write an answer at the field above.<br />\r\n\t\t\t\t- Right answer colors <b>white</b>.<br />\r\n\t\t\t\t- Wrong answer colors{' '}\r\n\t\t\t\t<span className=\"three\">\r\n\t\t\t\t\t<b>red</b>\r\n\t\t\t\t</span>.<br />\r\n\t\t\t\t- Move to the next field and repeate.\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HowMultitabWorks;\r\n","import React from 'react';\r\n\r\nconst Toggler = props => {\r\n\r\n    return (\r\n        <div className={props.toggleBox.className}>\r\n            <label htmlFor={props.label.htmlFor}>\r\n                <span className={props.label.span.left.className}>{props.label.span.left.text}</span>\r\n                <input\r\n                    {...props.input}\r\n                    checked={props.checked}\r\n                    onChange={props.onChange}\r\n                    // type='checkbox'\r\n                    // className='add-subtract-toggle__input'\r\n                    // id='addition-subtraction'\r\n                    // checked={props.subtract}\r\n                    // onChange={() => props.setSubtract()}\r\n                />\r\n                <span className={props.label.span.right.className}>{props.label.span.right.text}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toggler;","import React from 'react';\r\n\r\nimport Collapsible from '../../collapsible/collapsible.component';\r\nimport HowMultitabWorks from '../../descriptions/multiplication-table/how-multitab-works.component';\r\n\r\nimport Toggler from '../../toggler/toggler.component';\r\n\r\nconst content = {\r\n\ttogglerAddSubtract: {\r\n\t\ttoggleBox: {\r\n\t\t\tclassName: 'add-subtract-toggle__box'\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\thtmlFor: 'addition-subtraction',\r\n\t\t\tspan: {\r\n\t\t\t\tleft: {\r\n\t\t\t\t\tclassName: 'header__description',\r\n\t\t\t\t\ttext: 'addition'\r\n\t\t\t\t},\r\n\t\t\t\tright: {\r\n\t\t\t\t\tclassName: 'header__description',\r\n\t\t\t\t\ttext: 'subtraction'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\ttype: 'checkbox',\r\n\t\t\tclassName: 'add-subtract-toggle__input',\r\n\t\t\tid: 'addition-subtraction'\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst Header = (props) => {\r\n\tconst collapsibleContent = () => {\r\n\t\treturn <HowMultitabWorks />;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"header__title\">Multiplication table</h1>\r\n\t\t\t<h3 className=\"header__title--small\">learn multiplication using addition and subtraction</h3>\r\n\t\t\t<hr className=\"header__hr\" />\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`How it works`}\r\n\t\t\t\tid={`multitable-usage`}\r\n\t\t\t\tcontent={collapsibleContent()}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-one`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t\t// collapsibleClassName={`collapsible--settings`}\r\n\t\t\t/>\r\n\t\t\t<Toggler\r\n\t\t\t\t{...content.togglerAddSubtract}\r\n\t\t\t\tchecked={props.subtract}\r\n\t\t\t\t// onChange={props.setSubtract}\r\n\t\t\t\tonChange={() => props.setSubtract()}\r\n\t\t\t/>\r\n\t\t\t<hr className=\"header__hr\" />\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst IconHeart = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M23.6 2c-3.363 0-6.258 2.736-7.599 5.594-1.342-2.858-4.237-5.594-7.601-5.594-4.637 0-8.4 3.764-8.4 8.401 0 9.433 9.516 11.906 16.001 21.232 6.13-9.268 15.999-12.1 15.999-21.232 0-4.637-3.763-8.401-8.4-8.401z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconHeart;","import React from 'react';\r\n\r\nconst IconLxKish = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 60 60\" aria-labelledby=\"title\">\r\n            <title id=\"title\">Lx Kish Logo</title>\r\n            <polygon points=\"1 8 8 1 8 52 59 52 52 59 1 59\" />\r\n            <polygon points=\"15.75 13.5 22.5 6.75 52.25 36.5 45.5 43.25\" />\r\n            <polygon points=\"15.75 36.5 45.5 6.75 52.25 13.5 22.5 43.25\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconLxKish;","import React from 'react';\r\n\r\nimport IconHeart from '../icons-svg/icon-heart.component';\r\nimport IconLxKish from '../icons-svg/icon-lx-kish.component';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<p className=\"footer__credentials\">\r\n\t\t\t\t&#169; 2020 - 2021. Built with\r\n\t\t\t\t<span className=\"footer__icon-box\">\r\n\t\t\t\t\t<IconHeart className=\"footer__icon three\" />\r\n\t\t\t\t</span>\r\n\t\t\t\tby\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"footer__link\"\r\n\t\t\t\t\thref=\"https://lx-kish.github.io/personal-web-page/\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"footer__icon-box\">\r\n\t\t\t\t\t\t<IconLxKish className=\"footer__icon seven\" />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\tAlexander Kish\r\n\t\t\t\t</a>\r\n\t\t\t</p>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","const TabContent = {\r\n    styles: {\r\n        0: 'zero',\r\n        1: 'one',\r\n        2: 'two',\r\n        3: 'three',\r\n        4: 'four',\r\n        5: 'five',\r\n        6: 'six',\r\n        7: 'seven',\r\n        8: 'eight',\r\n        9: 'nine',\r\n        10: 'ten'\r\n    }\r\n\r\n}\r\n\r\nexport default TabContent;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nconst TabHeader = props => {\r\n\r\n    return (\r\n\r\n        <div className='tab__line--header' id={props.id}>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n            {[...Array(11)].map((x, i) => {\r\n                let j = props.subtract ? 10 - i : i\r\n                if (j > 1) {\r\n                    return (\r\n                        <React.Fragment key={j}>\r\n                            <div className='tab__empty-cell tab__empty-cell--head'>{props.sign}</div>\r\n                            <div className={`tab__heading-cell ${content.styles[j]}`}>{j}</div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                else return null;\r\n            }\r\n            )}\r\n            <div className='tab__heading-cell tab__heading-cell--side'>&#xa0;</div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default TabHeader;","import React from 'react';\r\n\r\nconst EmptyLine = props => {\r\n\r\n    return (\r\n        <div className='tab__line--empty-stick'>\r\n            <div className='tab__heading-cell tab__heading-cell--side'>{\" \"}</div>\r\n            {/* <div className='tab__heading-cell tab__heading-cell--side'>{props.sign}</div> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EmptyLine;","import React from 'react';\r\n\r\nconst NumberInputField = (props) => {\r\n\t/**\r\n     * Validate a key down event for the range of criteria\r\n     * @param  {event} e a key down event\r\n     * @return {boolean} validation state\r\n     */\r\n\tconst applyKeyDown = (e) => {\r\n\t\tvar value = true;\r\n\r\n\t\t/**\r\n\t\t\t * arrows up & down are allways denied\r\n\t\t\t * to prevent choosing right answer from keyboard \r\n\t\t\t */\r\n\t\tif (e.which === 38 || e.which === 40) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/** delete, backspace and tab are always allowed \r\n\t\t\t */\r\n\t\tif (\r\n\t\t\te.which === 8 || //backspace\r\n\t\t\te.which === 46 || //delete\r\n\t\t\te.which === 9\r\n\t\t) {\r\n\t\t\t//tab\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t/** more than 2 digits in a 2-digits fields,\r\n\t\t\t * more than 3 digits in a 3-digits field\r\n\t\t\t * instant return to prevent overflowing\r\n\t\t\t */\r\n\t\tif (e.target.value.length > e.target.max.length - 1) {\r\n\t\t\t// (e.target.max < 100 && e.target.value.length > 1) || //length > 2\r\n\t\t\t// (e.target.max >= 100 && e.target.value.length > 2)\r\n\t\t\t// ) {\r\n\t\t\t//in \"100\" length > 3\r\n\t\t\t// || (e.target.max === 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n\t\t\t// console.log(e.target.value, e.which, e.target.max, e.target.value.length);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/** https://stackoverflow.com/questions/13196945/keycode-values-for-numeric-keypad/13196983\r\n\t\t\t * The problem with keyCode is to avoid the combined keys\r\n\t\t\t * with the numbers on top of keyboard, we must add a check\r\n\t\t\t *  on the key \"Shift\" and \"Alt\" to avoid special characters\r\n\t\t\t * such as e @ & \" { } ...\r\n\t\t\t */\r\n\t\tlet key = Number(e.key);\r\n\t\tif (isNaN(key) || e.key === null || e.key === ' ') {\r\n\t\t\t// console.log(\"is not numeric\");\r\n\t\t\tvalue = true;\r\n\t\t} else {\r\n\t\t\t// console.log(\"is numeric\");\r\n\t\t\tvalue = false;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t};\r\n\r\n\t/**\r\n\t * Handles key-down event, runs key validation, \r\n\t * decline input of the key if invalid\r\n\t * @return {void}\r\n\t */\r\n\tconst handleKeyDown = (e) => {\r\n\t\tif (applyKeyDown(e)) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * To ensure that the implicit browser state and state of children is reset,\r\n\t * you can add a key attribute to the root-level component returned by render;\r\n\t * when it changes, that component will be thrown away and created from scratch.\r\n\t * \r\n\t * For more details see:\r\n\t * https://stackoverflow.com/questions/37946229/how-do-i-reset-the-defaultvalue-for-a-react-input\r\n\t * \r\n\t * https://stackoverflow.com/a/21750576/275501\r\n\t */\r\n\r\n\treturn (\r\n\t\t<span key={props.index || props.max}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tpattern=\"[0-9]*\"\r\n\t\t\t\tinputMode=\"numeric\"\r\n\t\t\t\tname={props.name || ''}\r\n\t\t\t\tdefaultValue={props.value || ''}\r\n\t\t\t\tclassName={props.className}\r\n\t\t\t\tplaceholder=\" \"\r\n\t\t\t\tmin={parseInt(props.min)}\r\n\t\t\t\tmax={parseInt(props.max)}\r\n\t\t\t\tstep=\"1\"\r\n\t\t\t\tonKeyDown={(event) => handleKeyDown(event)}\r\n\t\t\t\tonChange={props.onChange}\r\n\t\t\t\ttitle=\"\"\r\n\t\t\t/>\r\n\t\t</span>\r\n\t);\r\n};\r\n\r\nexport default NumberInputField;\r\n","import React from 'react';\r\n\r\nconst IconCircle = props => {\r\n\r\n    return (\r\n        <svg className={props.className} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" >\r\n            <path d=\"M24 14c0 6.625-5.375 12-12 12s-12-5.375-12-12 5.375-12 12-12 12 5.375 12 12z\" />\r\n        </svg>\r\n    )\r\n};\r\n\r\nexport default IconCircle;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nimport NumberInputField from '../../input-fields/number-input-field.component';\r\nimport IconCircle from '../../icons-svg/icon-circle.component';\r\n\r\nconst TabCell = (props) => {\r\n\t/**\r\n     * Rounds half a number to a bigger whole digit\r\n     * @return {Number} amount of dots on the top line\r\n     */\r\n\tconst getRoundedHalfANumber = (aNumber) => {\r\n\t\treturn Math.round(aNumber / 2);\r\n\t};\r\n\r\n\t/**\r\n     * Split the amount of dots into 2 lines if amount bigger than 2\r\n     * @return {Number} amount of dots on the top line\r\n     */\r\n\tconst getTopLineDotsAmount = () => {\r\n\t\treturn props.line > 2 ? getRoundedHalfANumber(props.line) : props.line;\r\n\t};\r\n\r\n\t/**\r\n     * Returns an Input className, all Inputs have the same,\r\n     * except Input for 100\r\n     * @return {String} className for Input field\r\n     */\r\n\tconst getInputClassName = () => {\r\n\t\treturn props.value < 100 ? 'component__input' : 'component__input component__input--hundreed';\r\n\t};\r\n\r\n\t// /**\r\n\t//  * Validate a key down event for the range of criteria\r\n\t//  * @param  {event} e a key down event\r\n\t//  * @return {boolean} validation state\r\n\t//  */\r\n\t// const applyKeyDown = e => {\r\n\r\n\t//     var value = true;\r\n\r\n\t//     /**\r\n\t//      * arrows up & down are allways denied\r\n\t//      * to prevent choosing right answer from keyboard\r\n\t//      */\r\n\t//     if (e.which === 38 || e.which === 40) {\r\n\t//         return true;\r\n\t//     }\r\n\r\n\t//     /** delete, backspace and tab are always allowed\r\n\t//      */\r\n\t//     if (e.which === 8  //backspace\r\n\t//         || e.which === 46 //delete\r\n\t//         || e.which === 9)  //tab\r\n\t//     {\r\n\t//         return false;\r\n\t//     }\r\n\r\n\t//     /** more than 2 digits in a 2-digits fields,\r\n\t//      * more than 3 digits in a 3-digits field\r\n\t//      * instant return to prevent overflowing\r\n\t//      */\r\n\t//     if ((e.target.max < 100 && e.target.value.length > 1) //length > 2\r\n\t//         || (e.target.max >= 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n\t//     // || (e.target.max === 100 && e.target.value.length > 2)) //in \"100\" length > 3\r\n\t//     {\r\n\t//         console.log(e.target.value, e.which, e.target.max, e.target.value.length);\r\n\t//         return true;\r\n\t//     }\r\n\r\n\t//     /** https://stackoverflow.com/questions/13196945/keycode-values-for-numeric-keypad/13196983\r\n\t//      * The problem with keyCode is to avoid the combined keys\r\n\t//      * with the numbers on top of keyboard, we must add a check\r\n\t//      *  on the key \"Shift\" and \"Alt\" to avoid special characters\r\n\t//      * such as e @ & \" { } ...\r\n\t//      */\r\n\t//     let key = Number(e.key)\r\n\t//     if (isNaN(key) || e.key === null || e.key === ' ') {\r\n\t//         // console.log(\"is not numeric\");\r\n\t//         value = true;\r\n\t//     }\r\n\t//     else {\r\n\t//         // console.log(\"is numeric\");\r\n\t//         value = false;\r\n\t//     }\r\n\r\n\t//     return value;\r\n\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Handles key-down event, runs key validation,\r\n\t//  * decline input of the key if invalid\r\n\t//  * @return {void}\r\n\t//  */\r\n\t// const handleKeyDown = (e) => {\r\n\r\n\t//     if (applyKeyDown(e)) {\r\n\r\n\t//         e.preventDefault();\r\n\t//     }\r\n\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className=\"component\">\r\n\t\t\t<div className=\"component__input-box\">\r\n\t\t\t\t{/* <input\r\n                    type='number'\r\n                    pattern='[0-9]*'\r\n                    inputMode='numeric'\r\n                    className={getInputClassName()}\r\n                    placeholder=' '\r\n                    min={props.value}\r\n                    max={props.value}\r\n                    step='1'\r\n                    onKeyDown={\r\n                        (event) => handleKeyDown(event)\r\n                    }\r\n                /> */}\r\n\t\t\t\t<NumberInputField\r\n\t\t\t\t\tclassName={getInputClassName()}\r\n\t\t\t\t\tplaceholder=\" \"\r\n\t\t\t\t\tmin={props.value}\r\n\t\t\t\t\tmax={props.value}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"component__score\">\r\n\t\t\t\t<div className=\"component__score-row\">\r\n\t\t\t\t\t{[ ...Array(getTopLineDotsAmount()) ].map((x, i) => (\r\n\t\t\t\t\t\t<IconCircle key={i} className={`component__icon ${content.styles[i + 1]}`} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"component__score-row\">\r\n\t\t\t\t\t{[ ...Array(props.line - getTopLineDotsAmount()) ].map((x, i) => (\r\n\t\t\t\t\t\t<IconCircle\r\n\t\t\t\t\t\t\tkey={i + getRoundedHalfANumber(props.line)}\r\n\t\t\t\t\t\t\tclassName={`component__icon ${content.styles[i + 1 + getRoundedHalfANumber(props.line)]}`}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TabCell;\r\n","import React from 'react';\r\n\r\nconst TabEmptyCell = props => {\r\n\r\n    return (\r\n        <div className='tab__empty-cell'>{props.sign}</div>\r\n    )\r\n};\r\n\r\nexport default TabEmptyCell;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nimport TabCell from '../../multiplication-tab/tab-cell/tab-cell.component';\r\nimport TabEmptyCell from '../tab-empty-cell/tab-empty-cell.component';\r\n\r\nconst TabLine = props => {\r\n\r\n    return (\r\n        <div className={`tab__line ${props.className}`}>\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n            {[...Array(11)].map((x, i) => {\r\n                let j = props.subtract ? 10 - i : i\r\n                if (j > 1) {\r\n                    return (\r\n                        <React.Fragment key={j}>\r\n                            <TabEmptyCell\r\n                                className='tab__empty-cell'\r\n                                sign={i >= 1 ? props.sign : ''}\r\n                            />\r\n                            <TabCell\r\n                                line={props.value}\r\n                                value={j * props.value}\r\n                            />\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                else return null;\r\n            }\r\n            )}\r\n            <div className={`tab__heading-cell tab__heading-cell--side ${content.styles[props.value]}`}>{props.value}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TabLine;","import React from 'react';\r\n\r\nimport content from '../../../table.content';\r\n\r\nimport TabHeader from '../tab-header/tab-header.component';\r\nimport TabEmptyLine from '../tab-empty-line/tab-empty-line.component';\r\nimport TabLine from '../tab-line/tab-line.component';\r\n// import TabCell from '../tab-cell/tab-cell.component';\r\n\r\n\r\nconst Tab = props => {\r\n\r\n    return (\r\n        <main className='main'>\r\n            <section className='tab'>\r\n                <TabHeader\r\n                    subtract={props.subtract}\r\n                    sign={props.sign}\r\n                    id={'header-stick'}\r\n                />\r\n                <TabEmptyLine sign={props.sign} />\r\n                {[...Array(11)].map((x, i) =>\r\n                    i > 1 ?\r\n                        <TabLine\r\n                            key={i}\r\n                            className={content.styles[i]}\r\n                            value={i}\r\n                            subtract={props.subtract}\r\n                            sign={props.sign}\r\n                        />\r\n                        : null\r\n                )}\r\n                {/* <TabCell number={5} /> */}\r\n                <TabHeader\r\n                    subtract={props.subtract}\r\n                    sign={props.sign}\r\n                    id={''}\r\n                />\r\n            </section>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Tab;","import React from \"react\";\r\n\r\nconst IconBurger = ({ open, setOpen }) => {\r\n\r\n  return (\r\n    <div\r\n      className={`burger${open ? ' is-active' : ''}`}\r\n      onClick={setOpen}\r\n    >\r\n      <span className=\"line\" />\r\n      <span className=\"line\" />\r\n      <span className=\"line\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBurger;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SlideBar = ({ open, links, hideSliderMenu }) => {\r\n\tconst element = (link, i) => (\r\n\t\t<Link key={i} to={link.link} className={`slide-bar__item ${link.className}`} onClick={() => hideSliderMenu()}>\r\n\t\t\t{link.name}\r\n\t\t</Link>\r\n\t);\r\n\r\n\tconst showLinks = (links) =>\r\n\t\tlinks.map((link, i) => {\r\n\t\t\treturn element(link, i);\r\n\t\t});\r\n\r\n\treturn <nav className={`slide-bar${open ? ' is-active' : ''}`}>{showLinks(links)}</nav>;\r\n};\r\n\r\nexport default SlideBar;\r\n","import React from 'react';\r\n\r\nimport BurgerIcon from '../burger icon/icon-burger.component';\r\nimport SlideBar from '../slide bar/slide-bar.component';\r\n\r\nimport siteMenu from '../siteMenu';\r\n\r\nconst NavigationBar = (props) => {\r\n\t/**\r\n   * Application navigation menu component\r\n   * \r\n   * \r\n   */\r\n\r\n\tconst [ open, setOpen ] = React.useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"navigation\">\r\n\t\t\t<div className={`navigation__bg${open ? ' is-active' : ''}`} onClick={() => setOpen(false)}></div>\r\n\t\t\t<BurgerIcon open={open} setOpen={() => setOpen(!open)} />\r\n\t\t\t<SlideBar open={open} links={siteMenu} hideSliderMenu={() => setOpen(false)} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\n\r\n// import useClickOutside from '../../utils/use-click-outside/useClickOutside';\r\n\r\nimport Header from '../../components/headers/multiplication-tab/header.component';\r\nimport Footer from '../../components/footer/footer.component';\r\nimport Tab from '../../components/multiplication-tab/table/tab.component';\r\n\r\nimport NavigationBar from '../../components/navigation/navigation-bar/navigation-bar.component';\r\n\r\nconst MultiplicationTab = props => {\r\n\r\n    /**\r\n     * Single state hook useState for all the state properties\r\n     */\r\n    const [fullState, setFullState] = React.useState({\r\n        sticky: 0,\r\n        display: false,\r\n        subtract: false,\r\n        open: false\r\n    });\r\n\r\n    const menuRef = React.useRef();\r\n\r\n\tconst setOpen = () => {\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\topen: !fullState.open\r\n\t\t});\r\n\t};\r\n\r\n\tconst hideSliderMenu = () => {\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\topen: false\r\n\t\t});\r\n\t};\r\n  \r\n\t// useClickOutside(menuRef, hideSliderMenu);\r\n\r\n    // const setSubtract = () => {\r\n    //     console.log('setSubtract inside ===> ', fullState.subtract);\r\n\t// \tsetFullState({\r\n\t// \t\t...fullState,\r\n\t// \t\topen: !fullState.subtract\r\n\t// \t});\r\n\t// };\r\n\r\n    // const setChecked = () => {\r\n    //     console.log('setChecked inside ===> ', fullState.display);\r\n\t// \tsetFullState({\r\n\t// \t\t...fullState,\r\n\t// \t\tdisplay: !fullState.display\r\n\t// \t});\r\n\t// };\r\n\r\n    /**\r\n     * Returns mathematical sign for addition or subtraction\r\n     * @return {html entity} sign code\r\n     */\r\n    const getSign = () => {\r\n        return fullState.subtract ? <>&#x2212;</> : <>&#x2b;</>\r\n    }\r\n\r\n    /**\r\n     * Gets and returns offsetTop of the 'header-stick' section\r\n     * @return {Number} offsetTop\r\n     */\r\n    const getHeaderOffsetTop = () => {\r\n        const header = document.getElementById('header-stick');\r\n        if (header) {\r\n            return header.offsetTop;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n    * Empty all the table inputs\r\n    * @return {void} \r\n    */\r\n    const emptyInputs = () => {\r\n        let inputs = document.getElementsByClassName('component__input');\r\n        // console.log(typeof(inputs))\r\n        inputs = Array.from(inputs);\r\n        inputs.map(input => input.value = '')\r\n    };\r\n\r\n    /**\r\n     * React hook useEffect for updating sticky state property\r\n     * on display property changing\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        setFullState({\r\n            ...fullState,\r\n            sticky: getHeaderOffsetTop()\r\n        })\r\n\r\n    }, [fullState.display]);\r\n\r\n    /**\r\n     * React hook useEffect for stick header on scrolling\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        const scrollCallBack = window.addEventListener('scroll', () => {\r\n            const header = document.getElementById('header-stick');\r\n            // console.log('header from useEffect ===> ', header);\r\n            if (header) {\r\n                if (window.pageYOffset >= fullState.sticky) { //sticky) {\r\n                    header.classList.add('sticky');\r\n                } else {\r\n                    header.classList.remove('sticky');\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollCallBack);\r\n        };\r\n    }, [fullState.sticky]);\r\n\r\n    /**\r\n    * React hook useEffect for updating sticky state property\r\n    * on resizing\r\n    */\r\n    React.useEffect(() => {\r\n\r\n        const resizeCallBack = window.addEventListener('resize', () => {\r\n            setFullState({\r\n                ...fullState,\r\n                sticky: getHeaderOffsetTop()\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resizeCallBack);\r\n        };\r\n    }, [fullState.sticky]);\r\n\r\n    /**\r\n     * React hook useEffect for empty input when toggle addition/subtraction\r\n     */\r\n    React.useEffect(() => {\r\n\r\n        emptyInputs();\r\n\r\n    }, [fullState.subtract]);\r\n\r\n    // console.log('fullState.display from multiplication tab component ===> ', fullState.display);\r\n    // console.log('fullState.subtract from multiplication tab component ===> ', fullState.subtract);\r\n\r\n    return (\r\n        <>\r\n        \t<NavigationBar open={fullState.open} setOpen={setOpen} hideSliderMenu={hideSliderMenu} menuRef={menuRef} />\r\n            <Header\r\n                display={fullState.display}\r\n                subtract={fullState.subtract}\r\n                // setChecked={setChecked}\r\n                setChecked={() =>\r\n                    setFullState({\r\n                        ...fullState,\r\n                        display: !fullState.display\r\n                    })\r\n                }\r\n                // setSubtract={setSubtract}\r\n                setSubtract={() =>\r\n                    setFullState({\r\n                        ...fullState,\r\n                        subtract: !fullState.subtract\r\n                    })\r\n                }\r\n            />\r\n            <Tab\r\n                sticky={fullState.sticky}\r\n                subtract={fullState.subtract}\r\n                sign={getSign()}\r\n            />\r\n            <Footer />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default MultiplicationTab;","import React from 'react';\r\n\r\nconst CountingOn = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tCounting On is a beginning mental math strategy, using both for addition and for subtraction.<br />\r\n\t\t\t\tIn addition, first, find the biggest number in an equation. Then count up until adding the lowest number. For\r\n\t\t\t\texample, in the equation<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">4 + 3</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tstart with the 4 in the head, and then count up, \"5, 6, 7.\" This is important to start count from 4, but not\r\n\t\t\t\tlike, \"1, 2, 3, 4...5, 6, 7.\" It also introduces the commutative property of addition, which says that changing\r\n\t\t\t\tthe order of addends does not change the sum. So if an equation looks like this<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">2 + 6</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tit still should start with the bigger number (in this case, 6) and count up: \"7, 8.\"<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tIn subtraction, simple count down from the biggest number in an equation until subtracting the lowest number,\r\n\t\t\t\topposite to the counting up in addition. For example, in the equation<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">5 - 3</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tstart with the 5 in the head, and then count down: \"4, 3, 2.\"\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CountingOn;\r\n","import React from 'react';\r\n\r\nconst MakeATen = (props) => {\r\n\treturn (\r\n\t\t<div className={props?.className}>\r\n\t\t\t<p className={props?.paragraphClassName}>\r\n\t\t\t\tMake a Ten is a mental math strategy based on developing tens from the given operands by adding and subtracting\r\n\t\t\t\tappropriate numbers. For example, to solve the addition problem<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">8 + 5</span><br />\r\n        take <span className=\"red\">2</span> from the 5 and give it to the 8<br/>\r\n        <span className=\"description__paragraph--level-one\">5 - <span className=\"red\">2</span> = 3</span><br/>\r\n        <span className=\"description__paragraph--level-one\">8 + <span className=\"red\">2</span> = 10</span><br/>\r\n        and then add the results<br/>\r\n        <span className=\"description__paragraph--level-one\">10 + 3 = 13</span><br/>\r\n        The opposite also possible: take <span className=\"red\">5</span> from the 8 and give it to the 5<br/>\r\n        <span className=\"description__paragraph--level-one\">8 - <span className=\"red\">5</span> = 3</span><br/>\r\n        <span className=\"description__paragraph--level-one\">5 + <span className=\"red\">5</span> = 10</span><br/>\r\n        <span className=\"description__paragraph--level-one\">10 + 3 = 13</span><br/>\r\n        <br/>\r\n        In subtraction, Make a Ten can be used when subtrahend ones are bigger then minuend<br/>\r\n        <span className=\"description__paragraph--level-one\">15 - 7</span><br/>\r\n        decrease both operands by 5 to make a ten in the minuend<br/>\r\n        <span className=\"description__paragraph--level-one\">(15 - <span className=\"red\">5</span>) - (7 - <span className=\"red\">5</span>) = 10 - 2</span><br/>\r\n        and then subtract the remined <span className=\"red\">2</span>\r\n        <span className=\"description__paragraph--level-one\">10 - 2 = 8</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MakeATen;\r\n","import React from 'react';\r\n\r\nconst Decomposing = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tBreaking apart, or decomposing, is a universal strategy for mental addition and subtraction. The key point is\r\n\t\t\t\tdecomposing one of the addends into the tens and the ones and then add or subtract them sequentially.<br />\r\n\t\t\t\tFor example, to solve addition problem<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">43 + 35</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tfirst decompose the 35 into <span className=\"red\">30</span> + <span className=\"red\">5</span>, then add both\r\n\t\t\t\tsequentially<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t43 + <span className=\"red\">30</span> = 73\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tand then the remaining 5<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t73 + <span className=\"red\">5</span> = 78\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tTo subtract<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">43 - 15</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tdecompose the 15 into <span className=\"red\">12</span> and <span className=\"red\">3</span>, then subtract first 3<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t43 - <span className=\"red\">3</span> = 40\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tand then the remaining 12<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t40 - <span className=\"red\">12</span> = 28\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tThe same example can be solved another way, using the same strategy<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">43 - 15</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tdecompose the 15 into <span className=\"red\">10</span> and <span className=\"red\">5</span>, then subtract first 10<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t43 - <span className=\"red\">10</span> = 33\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tand then the remaining 5<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t33 - <span className=\"red\">5</span> = 28\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Decomposing;\r\n","import React from 'react';\r\n\r\nconst EqualAddition = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tEqual Additions Strategy based on the fact, that increasing both minuend and subtrahend by the same number\r\n\t\t\t\tresults in the same difference between them. Just add the appropriate number to both operands to round to the\r\n\t\t\t\tnearest tenth one of them<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">44 - 18</span><br />\r\n\t\t\t\tadd <span className=\"red\">2</span> to both operands<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">(44 + <span className=\"red\">2</span>) - (18 + <span className=\"red\">2</span>) =</span><br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">46 - 20 = 26</span><br />\r\n\t\t\t\tAnother example<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">29 - 17</span><br />\r\n\t\t\t\tadd <span className=\"red\">1</span> to both operands<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">(29 + <span className=\"red\">1</span>) - (17 + <span className=\"red\">1</span>) =</span><br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">30 - 18 = 12</span><br />\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EqualAddition;\r\n","import React from 'react';\r\n\r\nconst Compensation = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tCompensation is a mental math strategy for multi-digit addition that involves adjusting one of the addends to\r\n\t\t\t\tmake the equation easier to solve. So, to solve the equation<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">36 + 59</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tFirst, since 59 is so close to <span className=\"red\">60</span>, add<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t36 + <span className=\"red\">60</span> = 96\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tThis is easier to solve. Then, since extra <span className=\"red\">1</span> was added to the original equation,\r\n\t\t\t\tsubtract that <span className=\"red\">1</span> from the final answer.<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t96 - <span className=\"red\">1</span> = 95\r\n\t\t\t\t</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tAnother example<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">118 + 23</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tUsing compensation, add <span className=\"red\">2</span> to 118, and then add 23 to 120. It is easier<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">120 + 23 = 143</span>\r\n\t\t\t\t<br />\r\n\t\t\t\tThen, as <span className=\"red\">2</span> was added to 118, it should be subtracted from the resulted 143<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">\r\n\t\t\t\t\t143 - <span className=\"red\">2</span> = 141\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Compensation;\r\n","import React from 'react';\r\n\r\nimport Collapsible from '../../collapsible/collapsible.component';\r\n\r\nimport CountingOn from '../math-theory/strategies/counting-on.component';\r\nimport MakeATen from '../math-theory/strategies/make-a-ten.component';\r\nimport Decomposing from '../math-theory/strategies/decomposing.component';\r\nimport EqualAddition from '../math-theory/strategies/equal-addition.component';\r\nimport Compensation from '../math-theory/strategies/compensation.component';\r\n\r\nconst Math = (props) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className={props.className}>\r\n\t\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\t\tThere are several strategies for performing mental addition and subtraction:<br />\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"header__hr\" />\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Counting On`}\r\n\t\t\t\tid={`counting-on`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<CountingOn\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Make A Ten`}\r\n\t\t\t\tid={`make-a-ten`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<MakeATen\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Decomposing`}\r\n\t\t\t\tid={`decomposing`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<Decomposing\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Equal Addition`}\r\n\t\t\t\tid={`equal-addition`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<EqualAddition\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Compensation`}\r\n\t\t\t\tid={`compensation`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<Compensation\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Math;\r\n","import React from 'react';\r\n\r\nconst UpToTen = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tUp to ten is a most primitive type of problems, where all the count is happening within ten, and both operands\r\n\t\t\t\tare single digit numbers. This type of problems<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">4 + 3</span><br/>\r\n\t\t\t\tcan be solved with own fingers using Counting On strategy.\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default UpToTen;\r\n","import React from 'react';\r\n\r\nconst SingleDigitOperands = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tSingle digit operands is a type of problems, where both operands are single digit numbers. This type of problems<br />\r\n\t\t\t\t<span className=\"description__paragraph--level-one\">4 + 3</span>\r\n\t\t\t\tis better suit for training basic arithmetic skills and developing elementary math insights.<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tPossible solution strategies are:<br />\r\n\t\t\t\tCounting on<br/>\r\n\t\t\t\tMake a ten<br/>\r\n\t\t\t\tDecomposing<br/>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SingleDigitOperands;\r\n","import React from 'react';\r\n\r\nconst TwoAndSingleDigits = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tCompensation involves adding more than you need and then subtracting the extra off that you have added. This\r\n\t\t\t\tstrategy is useful for adding numbers that are close to a multiple of 10, such as numbers that end in 1 or 2, or\r\n\t\t\t\t8 or 9. The number to be added is rounded to a multiple of 10 plus or minus a small number. For example, adding\r\n\t\t\t\t9 is carried out by adding 10, then subtracting 1. A similar strategy works for adding decimals that are close\r\n\t\t\t\tto whole numbers.<br />\r\n\t\t\t\t4 + 3<br />\r\n\t\t\t\tstart with the \"4\" in the head, and then count up, \"5, 6, 7.\" This is important to start count from \"4\", but not\r\n\t\t\t\tlike, \"1, 2, 3, 4...5, 6, 7.\" It also introduces the commutative property of addition, which says that changing\r\n\t\t\t\tthe order of addends does not change the sum. So if an equation looks like this<br />\r\n\t\t\t\t2 + 6<br />\r\n\t\t\t\tit still should start with the bigger number (in this case, 6) and count up: \"7, 8.\"<br />\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TwoAndSingleDigits;\r\n","import React from 'react';\r\n\r\nconst TwoDigitAndTens = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tCompensation involves adding more than you need and then subtracting the extra off that you have added. This\r\n\t\t\t\tstrategy is useful for adding numbers that are close to a multiple of 10, such as numbers that end in 1 or 2, or\r\n\t\t\t\t8 or 9. The number to be added is rounded to a multiple of 10 plus or minus a small number. For example, adding\r\n\t\t\t\t9 is carried out by adding 10, then subtracting 1. A similar strategy works for adding decimals that are close\r\n\t\t\t\tto whole numbers.<br />\r\n\t\t\t\t4 + 3<br />\r\n\t\t\t\tstart with the \"4\" in the head, and then count up, \"5, 6, 7.\" This is important to start count from \"4\", but not\r\n\t\t\t\tlike, \"1, 2, 3, 4...5, 6, 7.\" It also introduces the commutative property of addition, which says that changing\r\n\t\t\t\tthe order of addends does not change the sum. So if an equation looks like this<br />\r\n\t\t\t\t2 + 6<br />\r\n\t\t\t\tit still should start with the bigger number (in this case, 6) and count up: \"7, 8.\"<br />\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TwoDigitAndTens;\r\n","import React from 'react';\r\n\r\nconst TwoDigitOperands = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tCompensation involves adding more than you need and then subtracting the extra off that you have added. This\r\n\t\t\t\tstrategy is useful for adding numbers that are close to a multiple of 10, such as numbers that end in 1 or 2, or\r\n\t\t\t\t8 or 9. The number to be added is rounded to a multiple of 10 plus or minus a small number. For example, adding\r\n\t\t\t\t9 is carried out by adding 10, then subtracting 1. A similar strategy works for adding decimals that are close\r\n\t\t\t\tto whole numbers.<br />\r\n\t\t\t\t4 + 3<br />\r\n\t\t\t\tstart with the \"4\" in the head, and then count up, \"5, 6, 7.\" This is important to start count from \"4\", but not\r\n\t\t\t\tlike, \"1, 2, 3, 4...5, 6, 7.\" It also introduces the commutative property of addition, which says that changing\r\n\t\t\t\tthe order of addends does not change the sum. So if an equation looks like this<br />\r\n\t\t\t\t2 + 6<br />\r\n\t\t\t\tit still should start with the bigger number (in this case, 6) and count up: \"7, 8.\"<br />\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TwoDigitOperands;\r\n","import React from 'react';\r\n\r\nconst TwoDigitTidingUp = (props) => {\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<p className={props.paragraphClassName}>\r\n\t\t\t\tCompensation involves adding more than you need and then subtracting the extra off that you have added. This\r\n\t\t\t\tstrategy is useful for adding numbers that are close to a multiple of 10, such as numbers that end in 1 or 2, or\r\n\t\t\t\t8 or 9. The number to be added is rounded to a multiple of 10 plus or minus a small number. For example, adding\r\n\t\t\t\t9 is carried out by adding 10, then subtracting 1. A similar strategy works for adding decimals that are close\r\n\t\t\t\tto whole numbers.<br />\r\n\t\t\t\t4 + 3<br />\r\n\t\t\t\tstart with the \"4\" in the head, and then count up, \"5, 6, 7.\" This is important to start count from \"4\", but not\r\n\t\t\t\tlike, \"1, 2, 3, 4...5, 6, 7.\" It also introduces the commutative property of addition, which says that changing\r\n\t\t\t\tthe order of addends does not change the sum. So if an equation looks like this<br />\r\n\t\t\t\t2 + 6<br />\r\n\t\t\t\tit still should start with the bigger number (in this case, 6) and count up: \"7, 8.\"<br />\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TwoDigitTidingUp;\r\n","import React from 'react';\r\n\r\nimport Collapsible from '../../collapsible/collapsible.component';\r\n\r\nimport UpToTen from './problem-types/up-to-ten.component';\r\nimport SingleDigitOperands from './problem-types/single-digit-operands.component';\r\nimport TwoAndSingleDigits from './problem-types/two-and-single-digits.component';\r\nimport TwoDigitsAndTens from './problem-types/two-digit-and-tens.component';\r\nimport TwoDigitsOperands from './problem-types/two-digit-operands.component';\r\nimport TwoDigitsTidingUp from './problem-types/two-digit-tidying-up.component';\r\n\r\nimport schemaBigScreen from './shcema-big-screen-arrows.png';\r\nimport schemaSmallScreen from './shcema-small-screen-arrows.png';\r\n\r\nconst HowAdditionSubtractionWorks = (props) => {\r\n\treturn (\r\n\t\t<div className=\"description\">\r\n\t\t\t<p className=\"description__paragraph description__paragraph--level-two\">\r\n\t\t\t\tThe application consists of the Settings part and the Problems part.<br />\r\n\t\t\t\tProblems part contains randomly generated problems, having specific problems characteristics, which can be\r\n\t\t\t\tpreassigned in settings part before generating. The right answer colors <b>white</b>. The wrong answer colors{' '}\r\n\t\t\t\t<span className=\"three\">\r\n\t\t\t\t\t<b>red</b>\r\n\t\t\t\t</span>.<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tEach problem contains two numeric operands, addition or subtraction sign, equality sign and a numeric result.<br\r\n\t\t\t\t/>\r\n\t\t\t</p>\r\n\t\t\t<picture>\r\n\t\t\t\t<source srcSet={`${schemaSmallScreen} 1.8x`} media=\"(max-width: 380px)\" />\r\n\t\t\t\t<source srcSet={`${schemaSmallScreen} 1.5x`} media=\"(max-width: 480px)\" />\r\n\t\t\t\t<source srcSet={`${schemaSmallScreen} 1.2x`} media=\"(max-width: 580px)\" />\r\n\t\t\t\t<source srcSet={`${schemaSmallScreen} 1x`} media=\"(max-width: 680px)\" />\r\n\t\t\t\t<source srcSet={`${schemaBigScreen} 1.5x`} media=\"(max-width: 940px)\" />\r\n\t\t\t\t<img className=\"description__image\" srcSet={`${schemaBigScreen} 1x`} alt=\"Full Logo\" />\r\n\t\t\t</picture>\r\n\t\t\t<p className=\"description__paragraph description__paragraph--level-two\">\r\n\t\t\t\tThe Settings part contains one or multiple settings selections, which assign the specific details for the\r\n\t\t\t\tproblems generating. Each setting selection provides option to set operation (addition or subtraction), missing\r\n\t\t\t\toperand (first operand, second one, result or random - alltogether in arbitrary sequence), possible problem type\r\n\t\t\t\t(described further), and quantity of problems needed to be generated. If one of the selections is not selected,\r\n\t\t\t\tor the quantity field remains empty or equal 0, the line of settings just skipping during problems generating.<br />\r\n\t\t\t\t<br />\r\n\t\t\t\tThere are several problem types for addition or subtraction in the application:<br />\r\n\t\t\t</p>\r\n\t\t\t<hr className=\"header__hr\" />\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Up To Ten`}\r\n\t\t\t\tid={`up-to-ten`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<UpToTen\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Single Digit Operands`}\r\n\t\t\t\tid={`single-digit-operands`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<SingleDigitOperands\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Two and Single Digits`}\r\n\t\t\t\tid={`two-and-single-digits`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<TwoAndSingleDigits\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Two Digits and Tens`}\r\n\t\t\t\tid={`two-digits-and-tens`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<TwoDigitsAndTens\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Two Digits Operands`}\r\n\t\t\t\tid={`two-digits-operands`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<TwoDigitsOperands\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Two Digits Tiding Up`}\r\n\t\t\t\tid={`two-digits-tiding-up`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-four`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={\r\n\t\t\t\t\t<TwoDigitsTidingUp\r\n\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tborderBottom={false}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HowAdditionSubtractionWorks;\r\n","import React from 'react';\r\n\r\nimport Collapsible from '../../collapsible/collapsible.component';\r\nimport Math from '../../descriptions/addition-subtraction/math.component';\r\nimport HowAdditionSubtractionWorks from '../../descriptions/addition-subtraction/how-addition-subtraction-works.component';\r\n\r\nconst Header = (props) => {\r\n\tconst collapsibleContent = () => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t<p className=\"description__paragraph description__paragraph--level-one\">\r\n\t\t\t\t\t\tThe application is dedicated to developing mental addition and subtraction skills, which achieves via\r\n\t\t\t\t\t\tsolving problems with different levels of complexity.<br />\r\n\t\t\t\t\t\t{/* The information about Math and Technical aspects of the application contains in appropriate sections.<br /> */}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"header__hr\" />\r\n\t\t\t\t<Collapsible\r\n\t\t\t\t\ttitle={`Math Theory`}\r\n\t\t\t\t\tid={`math`}\r\n\t\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-two`}\r\n\t\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t<Math\r\n\t\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\t\tparagraphClassName=\"description__paragraph description__paragraph--level-two\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tborderBottom={false}\r\n\t\t\t\t/>\r\n\t\t\t\t<Collapsible\r\n\t\t\t\t\ttitle={`How it works`}\r\n\t\t\t\t\tid={`how-it-works`}\r\n\t\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-two`}\r\n\t\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\t\tcontent={<HowAdditionSubtractionWorks />}\r\n\t\t\t\t\tborderBottom={false}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1 className=\"header__title\">Addition and Subtraction</h1>\r\n\t\t\t<h3 className=\"header__title--small\">boost your skills of addition and subtraction</h3>\r\n\t\t\t<hr className=\"header__hr\" />\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`About`}\r\n\t\t\t\tid={`about`}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-one`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tcontent={collapsibleContent()}\r\n\t\t\t\tborderBottom={false}\r\n\t\t\t/>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport Collapsible from '../collapsible/collapsible.component';\r\nimport NumberInputField from '../input-fields/number-input-field.component';\r\n\r\n// import operations from '../addition-subtraction/operations';\r\nimport types from '../addition-subtraction/types';\r\n// import formats from '../addition-subtraction/missing';\r\n\r\nconst ProblemSettings = (props) => {\r\n\tconst [ fullState, setFullState ] = React.useState({\r\n\t\tproblemSettings: props.settings\r\n\t});\r\n\r\n\tconst insertSettings = (i) => (e) => {\r\n\t\tconst newProblemSettings = [\r\n\t\t\t...fullState.problemSettings.slice(0, i + 1),\r\n\t\t\t{\r\n\t\t\t\toperation: 'addition',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tmissing: 'result',\r\n\t\t\t\tquantity: 0\r\n\t\t\t},\r\n\t\t\t...fullState.problemSettings.slice(i + 1)\r\n\t\t];\r\n\r\n\t\t// console.log(\r\n\t\t// \t'%c fullState.problemSettings after addSetting of settings ===> ',\r\n\t\t// \t'color: orangered; font-weight: bold;',\r\n\t\t// \ti,\r\n\t\t// \te.target.tagName,\r\n\t\t// \tfullState.problemSettings\r\n\t\t// );\r\n\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\tproblemSettings: newProblemSettings\r\n\t\t});\r\n\t};\r\n\r\n\tconst deleteSettings = (i) => (e) => {\r\n\t\tconst newProblemSettings = [ ...fullState.problemSettings.slice(0, i), ...fullState.problemSettings.slice(i + 1) ];\r\n\r\n\t\tif (!newProblemSettings.length)\r\n\t\t\tnewProblemSettings.push({\r\n\t\t\t\toperation: '',\r\n\t\t\t\ttype: '',\r\n\t\t\t\tmissing: '',\r\n\t\t\t\tquantity: 0\r\n\t\t\t});\r\n\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\tproblemSettings: newProblemSettings\r\n\t\t});\r\n\t};\r\n\r\n\tconst setStateOnChange = (i) => (e) => {\r\n\t\tconst newProblemSettings = [ ...fullState.problemSettings ];\r\n\t\tconst value = e.target.value === 'true' ? '' : e.target.value;\r\n\t\t// const fieldName = e.target.name.indexOf('opeartion') ? 'opeartion' : e.target.name;\r\n\t\t// const value = e.target.tagName === 'SELECT' ? (e.target.value === 'true' ? '' : e.target.value) : e.target.value;\r\n\t\t// newProblemSettings[i][fieldName] = value;\r\n\t\tnewProblemSettings[i][e.target.name] = value;\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\tproblemSettings: newProblemSettings\r\n\t\t});\r\n\r\n\t\t// console.log(\r\n\t\t// \t'%c operation from select tag of settings ===> ',\r\n\t\t// \t'color: orangered; font-weight: bold;',\r\n\t\t// \ti,\r\n\t\t// \te.target.type,\r\n\t\t// \te.target.id,\r\n\t\t// \te.target.name,\r\n\t\t// \te.target.checked,\r\n\t\t// \tnewProblemSettings[i][e.target.name],\r\n\t\t// \tfullState.problemSettings\r\n\t\t// );\r\n\t};\r\n\r\n\tconst setStateOnRadioChange = (i) => (e) => {\r\n\t\tconst newProblemSettings = [ ...fullState.problemSettings ];\r\n\t\tconst fieldName = e.target.name.indexOf('opeartion') >= 0 ? 'opeartion' : 'missing';\r\n\t\tnewProblemSettings[i][fieldName] = e.target.value;\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\tproblemSettings: newProblemSettings\r\n\t\t});\r\n\r\n\t\t// console.log(\r\n\t\t// \t'%c operation from select tag of settings ===> ',\r\n\t\t// \t'color: orangered; font-weight: bold;',\r\n\t\t// \ti,\r\n\t\t// \te.target.type,\r\n\t\t// \te.target.id,\r\n\t\t// \te.target.name.indexOf('opeartion'),\r\n\t\t// \te.target.checked,\r\n\t\t// \tnewProblemSettings[i][e.target.name],\r\n\t\t// \tfullState.problemSettings\r\n\t\t// );\r\n\t};\r\n\r\n\t/**\r\n\t * Passing data to the parent component. For more details see:\r\n\t * https://stackoverflow.com/questions/40722382/how-to-pass-state-back-to-parent-in-react\r\n\t */\r\n\tconst generate = () => {\r\n\t\t//Validation of problemSettings\r\n\t\tconst validProblemSettings = fullState.problemSettings.filter(\r\n\t\t\t(setting) => setting.operation && setting.type && setting.missing && setting.quantity\r\n\t\t);\r\n\r\n\t\tprops.sendData(validProblemSettings);\r\n\t\t// props.sendData(fullState.problemSettings);\r\n\t};\r\n\r\n\tconst collapsibleContent = () => {\r\n\t\treturn (\r\n\t\t\t<div className=\"settings__settings-group\">\r\n\t\t\t\t{fullState.problemSettings.map((setting, index) => (\r\n\t\t\t\t\t<div className=\"settings__setting\" key={index}>\r\n\t\t\t\t\t\t<div className=\"settings__row--mobile\">\r\n\t\t\t\t\t\t\t<div className=\"settings__control settings__control--radio\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tid={`addition-${index}`}\r\n\t\t\t\t\t\t\t\t\tname={`operation-${index}`}\r\n\t\t\t\t\t\t\t\t\t// name=\"operation\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"addition\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__input\"\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnRadioChange(index)}\r\n\t\t\t\t\t\t\t\t\tchecked={setting.operation === 'addition'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor={`addition-${index}`}>addition</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tid={`subtraction-${index}`}\r\n\t\t\t\t\t\t\t\t\tname={`operation-${index}`}\r\n\t\t\t\t\t\t\t\t\t// name=\"operation\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"subtraction\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__input\"\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnRadioChange(index)}\r\n\t\t\t\t\t\t\t\t\tchecked={setting.operation === 'subtraction'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor={`subtraction-${index}`}>subtraction</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"settings__control settings__control--radio\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tid={`first-${index}`}\r\n\t\t\t\t\t\t\t\t\tname={`missing-${index}`}\r\n\t\t\t\t\t\t\t\t\t// name=\"missing\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"first\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__input\"\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnRadioChange(index)}\r\n\t\t\t\t\t\t\t\t\tchecked={setting.missing === 'first'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor={`first-${index}`}>first</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tid={`last-${index}`}\r\n\t\t\t\t\t\t\t\t\tname={`missing-${index}`}\r\n\t\t\t\t\t\t\t\t\t// name=\"missing\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"last\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__input\"\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnRadioChange(index)}\r\n\t\t\t\t\t\t\t\t\tchecked={setting.missing === 'last'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor={`last-${index}`}>last</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tid={`result-${index}`}\r\n\t\t\t\t\t\t\t\t\tname={`missing-${index}`}\r\n\t\t\t\t\t\t\t\t\t// name=\"missing\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"result\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__input\"\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnRadioChange(index)}\r\n\t\t\t\t\t\t\t\t\tchecked={setting.missing === 'result'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor={`result-${index}`}>result</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\tid={`random-${index}`}\r\n\t\t\t\t\t\t\t\t\tname={`missing-${index}`}\r\n\t\t\t\t\t\t\t\t\t// name=\"missing\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"random\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__input\"\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnRadioChange(index)}\r\n\t\t\t\t\t\t\t\t\tchecked={setting.missing === 'random'}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor={`random-${index}`}>random</label>\r\n\t\t\t\t\t\t\t\t{/* <label htmlFor=\"settings-missing\" className=\"settings__label\">\r\n\t\t\t\t\t\t\t\t\tMissing:\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tname=\"missing\"\r\n\t\t\t\t\t\t\t\t\tid=\"settings-missing\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__select\"\r\n\t\t\t\t\t\t\t\t\tvalue={setting.missing}\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnChange(index)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option defaultValue value>\r\n\t\t\t\t\t\t\t\t\t\t-- select --\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t{formats.map((missing, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={missing}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"settings__option\"\r\n\t\t\t\t\t\t\t\t\t\t\t// {...(missing === setting.missing ? '' : 'defaultValue')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{missing}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</select> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"settings__control\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"settings-type\" className=\"settings__label\">\r\n\t\t\t\t\t\t\t\t\tType:\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\tname=\"type\"\r\n\t\t\t\t\t\t\t\t\tid=\"settings-type\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__select\"\r\n\t\t\t\t\t\t\t\t\tvalue={setting.type}\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnChange(index)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option defaultValue value>\r\n\t\t\t\t\t\t\t\t\t\t-- select --\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t{types.map((type, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={type}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"settings__option\"\r\n\t\t\t\t\t\t\t\t\t\t\t// {...(type === setting.type ? '' : 'defaultValue')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{type}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"settings__row--mobile\">\r\n\t\t\t\t\t\t\t<div className=\"settings__control\">\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"settings-quantity\" className=\"settings__label\">\r\n\t\t\t\t\t\t\t\t\tQty:\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t{/* <input */}\r\n\t\t\t\t\t\t\t\t<NumberInputField\r\n\t\t\t\t\t\t\t\t\t// step=\"1\"\r\n\t\t\t\t\t\t\t\t\t// title=\"\"\r\n\t\t\t\t\t\t\t\t\t// placeholder=\" \"\r\n\t\t\t\t\t\t\t\t\t// type=\"number\"\r\n\t\t\t\t\t\t\t\t\t// pattern=\"[0-9]*\"\r\n\t\t\t\t\t\t\t\t\t// inputMode=\"numeric\"\r\n\t\t\t\t\t\t\t\t\tindex\r\n\t\t\t\t\t\t\t\t\tname=\"quantity\"\r\n\t\t\t\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"settings__input\"\r\n\t\t\t\t\t\t\t\t\tvalue={setting.quantity}\r\n\t\t\t\t\t\t\t\t\tonChange={setStateOnChange(index)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"settings__control settings__control--btns\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"+\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn settings__control-btn\"\r\n\t\t\t\t\t\t\t\t\tonClick={insertSettings(index)}\r\n\t\t\t\t\t\t\t\t\ttitle=\"add line\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"&times;\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn settings__control-btn\"\r\n\t\t\t\t\t\t\t\t\tonClick={deleteSettings(index)}\r\n\t\t\t\t\t\t\t\t\ttitle=\"remove line\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"settings\">\r\n\t\t\t<Collapsible\r\n\t\t\t\ttitle={`Settings`}\r\n\t\t\t\tid={`settings`}\r\n\t\t\t\tcontent={collapsibleContent()}\r\n\t\t\t\tcollapsibleClassName={`collapsible`}\r\n\t\t\t\ttitleClassName={`collapsible__title collapsible__title--level-one`}\r\n\t\t\t\ticonBoxClassName={`collapsible__icon-box`}\r\n\t\t\t\ticonClassName={`collapsible__icon`}\r\n\t\t\t\tborderBottom={true}\r\n\t\t\t/>\r\n\t\t\t<input type=\"button\" className=\"btn settings__go-btn\" value=\"Generate\" onClick={generate} />\r\n\t\t\t<hr className=\"header__hr\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProblemSettings;\r\n","import React from 'react';\r\n\r\nimport content from '../../table.content';\r\n\r\nconst Number = props => {\r\n  return (\r\n    <span className={props.className}>\r\n      {[ ...props.number.toString() ].map((digit, index) => (\r\n        <span className={`${content.styles[digit]}`} key={index}>\r\n          {digit}\r\n        </span>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Number;","import React from 'react';\r\n\r\nconst Sign = (props) => {\r\n\treturn <span className={props.className}>{props.sign}</span>;\r\n};\r\n\r\nexport default Sign;\r\n","import React from 'react';\r\n\r\nimport Number from '../../number/number.component';\r\nimport Sign from '../../sign/sign.component';\r\nimport NumberInputField from '../../input-fields/number-input-field.component';\r\n\r\nconst Problem = (props) => {\r\n\r\n\t// console.log('problem from problem.component ====> ', props.content);\r\n\r\n\tconst renderProblem = props.content.map((operand, i) => {\r\n\t\tlet renderedElement = null;\r\n\r\n\t\tswitch (operand.type) {\r\n\t\t\tcase 'operand':\r\n\t\t\t\trenderedElement = <Number number={operand.value} className=\"problem__digit\" key={i}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sign':\r\n\t\t\t\trenderedElement = <Sign sign={operand.value} className=\"problem__sign\" key={i}/>;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\t\trenderedElement = <NumberInputField min={operand.value} max={operand.value} className=\"problem__input\" key={i}/>;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn renderedElement;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"problem\">\r\n\t\t\t{renderProblem}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Problem;\r\n","import React from 'react';\r\n\r\nimport Problem from '../problem/problem.component';\r\n\r\n// const areEqual = (prevProps, nextProps) => true;\r\n\r\n// const Problems = React.memo((props) => {\r\nconst Problems = (props) => {\r\n\r\n\t// /**\r\n\t//  * Returns mathematical sign for addition or subtraction\r\n\t//  * @return {html entity} sign code\r\n\t//  */\r\n\t// const getSign = () => {\r\n\t//     return fullState.subtract ? <>&#x2212;</> : <>&#x2b;</>\r\n\t// }\r\n\r\n\t// /**\r\n\t//  * Gets and returns offsetTop of the 'header-stick' section\r\n\t//  * @return {Number} offsetTop\r\n\t//  */\r\n\t// const getHeaderOffsetTop = () => {\r\n\t//     const header = document.getElementById('header-stick');\r\n\t//     return header.offsetTop;\r\n\t// };\r\n\r\n\t// /**\r\n\t// * Empty all the table inputs\r\n\t// * @return {void}\r\n\t// */\r\n\t// const emptyInputs = () => {\r\n\t//     let inputs = document.getElementsByClassName('component__input');\r\n\t//     // console.log(typeof(inputs))\r\n\t//     inputs = Array.from(inputs);\r\n\t//     inputs.map(input => {\r\n\t//         input.value = '';\r\n\t//     })\r\n\t// };\r\n\r\n\t/**\r\n   * The following algorithm explained in details at:\r\n   * https://stackoverflow.com/questions/42391499/react-render-new-row-every-4th-column\r\n   */\r\n\r\n\t/**\r\n   * array of @cols elements, where @cols is the number of rows needed\r\n   * @arr <Array> - the given array of rendering elements\r\n   * @cols <Number> - the number of columns in a row\r\n   */\r\n\tconst rows = (arr, cols) => [ ...Array(Math.ceil(arr.length / cols)) ];\r\n\r\n\t// chunk the products into the array of rows\r\n\tconst contentRows = (arr, cols) => rows(arr, cols).map((row, idx) => arr.slice(idx * cols, idx * cols + cols));\r\n\t\r\n\tconst getContent = contentRows(props.problems, props.columns).map((row, i) => (\r\n\t// const getContent = contentRows(props.problems.additions, colPerRow).map((row, i) => (\r\n\t\t<div key={i} className=\"problem__row\">\r\n\t\t\t{row.map((problem, j) => <Problem key={j} content={problem} x={problem.x} y={problem.y} sign={`+`} />)}\r\n\t\t</div>\r\n\t));\r\n\r\n\treturn <div className=\"problems\">{getContent}</div>;\r\n// }, areEqual);\r\n};\r\n\r\nexport default Problems;\r\n","/**\r\n * Algorithm of generating a whole random numbers in a specific range\r\n * \r\n * Based on discussion:\r\n * https://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range \r\n * \r\n * Returns a random integer between min (inclusive) and max (inclusive).\r\n * The value is no lower than min (or the next integer greater than min\r\n * if min isn't an integer) and no greater than max (or the next integer\r\n * lower than max if max isn't an integer).\r\n * Using Math.round() will give you a non-uniform distribution!\r\n */\r\nconst getRandomIntegerInARange = (incomeMin, incomeMax) => {\r\n\r\n  try {\r\n    const min = Math.ceil(parseInt(incomeMin));\r\n    const max = Math.floor(parseInt(incomeMax));\r\n\r\n    const random = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    return random;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default getRandomIntegerInARange;","import randomInteger from '../randoms/get-random-integer-in-a-range';\r\n\r\n/**\r\n * \r\n */\r\nconst getInputPosition = (numberOfOperands, missing) => {\r\n\r\n  try {\r\n\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    let input;\r\n\r\n    if (missing === 'random') {\r\n      input = randomInteger(0, parseInt(numberOfOperands))\r\n    } else if (missing === 'first') {\r\n      input = 0;\r\n    } else if (missing === 'last') {\r\n      input = parseInt(numberOfOperands) - 1;\r\n    } else if (missing === 'result') {\r\n      input = parseInt(numberOfOperands);\r\n    }\r\n\r\n    console.log('%c input from \"get-input-position\" ===> ', 'color: orange; font-weight: bold;', input);\r\n\r\n    return input;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default getInputPosition;","import randomInteger from '../randoms/get-random-integer-in-a-range';\r\n\r\n/**\r\n * \r\n */\r\nconst upToTen = (operation, numberOfOperands) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    // to prevent a lot of randomized zeros generated\r\n    let zero = 1;\r\n\r\n    // 1. Generate problem maximum with limits min=0+numberOfOperands, max=10\r\n    const problemMaximum = randomInteger(0 + parseInt(numberOfOperands), 10);\r\n\r\n    const operands = [];\r\n    let operand = 0;\r\n    let problemSum = 0;\r\n\r\n    // 2. Loop with length <numberOfOperands>-1\r\n    for (let i = 0; i < numberOfOperands - 1; i++) {\r\n\r\n      // 3. Generate operand with limits min=0 (or 1), max=sum-problemTotal\r\n      operand = randomInteger(zero, problemMaximum - problemSum);\r\n      problemSum += operand;\r\n\r\n      // 4. Push operand into problems array\r\n      operands.push(operand);\r\n\r\n      // changing zero value 0/1 for each tick\r\n      zero = 1 - zero;\r\n    }\r\n    operands.push(problemMaximum - problemSum);\r\n\r\n    // 5. Push the problem maximum value to the appropriate place depend on operation (addition/subtraction)\r\n    operands.splice(\r\n      operation === 'addition' ? operands.length : 0,\r\n      0,\r\n      problemMaximum\r\n    );\r\n\r\n    console.log('%c operands from \"up-to-10\" ===> ', 'color: orange; font-weight: bold;', operands);\r\n\r\n    return operands;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default upToTen;","import randomInteger from '../randoms/get-random-integer-in-a-range';\r\n\r\n/**\r\n * \r\n */\r\nconst singleDigitOperands = (operation, numberOfOperands) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    // 1. Generate problem maximum with limits min=0+numberOfOperands, max=10\r\n    let problemMaximum = 0;\r\n\r\n    const operands = [];\r\n    let operand = 0;\r\n\r\n    // 2. Loop with length <numberOfOperands>-1\r\n    for (let i = 0; i < numberOfOperands; i++) {\r\n\r\n      // 3. Generate operand with limits min=0 (or 1), max=sum-problemTotal\r\n      operand = randomInteger(1, 9);\r\n      problemMaximum += parseInt(operand);\r\n\r\n      // 4. Push operand into problems array\r\n      operands.push(operand);\r\n    }\r\n\r\n    // 5. Push the problem maximum value to the appropriate place depend on operation (addition/subtraction)\r\n    operands.splice(\r\n      operation === 'addition' ? operands.length : 0,\r\n      0,\r\n      problemMaximum\r\n    );\r\n\r\n    console.log('%c operands from \"single-digit-operands\" ===> ', 'color: orange; font-weight: bold;', operands);\r\n\r\n    return operands;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default singleDigitOperands;","import randomInteger from '../randoms/get-random-integer-in-a-range';\r\n\r\n/**\r\n * \r\n */\r\nconst doubleAndSingleDigits = (operation, numberOfOperands) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    // 1. Generate problem maximum with limits min=0+numberOfOperands, max=10\r\n    let problemMaximum = 0;\r\n\r\n    const operands = [];\r\n    let operand = 0;\r\n\r\n    // 2. Loop with length <numberOfOperands>-1\r\n    for (let i = 0; i < numberOfOperands; i++) {\r\n\r\n      // 3. Generate operand with limits min=0 (or 1), max=sum-problemTotal\r\n      if (i > 0) {\r\n        operand = randomInteger(1, 9);\r\n        problemMaximum += parseInt(operand);\r\n      } else {\r\n        operand = randomInteger(11, 99);\r\n        problemMaximum += parseInt(operand);\r\n      }\r\n\r\n      // 4. Push operand into problems array\r\n      operands.push(operand);\r\n    }\r\n\r\n    // in case of addition sort array to add less to the bigger\r\n    if (operation === 'subtraction') operands.sort((a, b) => a - b);\r\n\r\n    // 5. Push the problem maximum value to the appropriate place depend on operation (addition/subtraction)\r\n    operands.splice(\r\n      operation === 'addition' ? operands.length : 0,\r\n      0,\r\n      problemMaximum\r\n    );\r\n\r\n    console.log(`%c operands from \"double-and-single-digits\" ===> `, 'color: orange; font-weight: bold;', operands);\r\n\r\n    return operands;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default doubleAndSingleDigits;","import randomInteger from '../randoms/get-random-integer-in-a-range';\r\n\r\n/**\r\n * \r\n */\r\nconst doubleDigitAndTens = (operation, numberOfOperands) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    // 1. Generate problem maximum with limits min=0+numberOfOperands, max=10\r\n    let problemMaximum = 0;\r\n\r\n    const operands = [];\r\n    let operand = 0;\r\n\r\n    // 2. Loop with length <numberOfOperands>-1\r\n    for (let i = 0; i < numberOfOperands; i++) {\r\n\r\n      // 3. Generate operand with limits min=0 (or 1), max=sum-problemTotal\r\n      if (i > 0) {\r\n        operand = randomInteger(1, 9) * 10;\r\n        problemMaximum += parseInt(operand);\r\n      } else {\r\n        operand = randomInteger(11, 99);\r\n        problemMaximum += parseInt(operand);\r\n      }\r\n\r\n      // 4. Push operand into problems array\r\n      operands.push(operand);\r\n    }\r\n\r\n    // in case of addition sort array to add less to the bigger\r\n    if (operation === 'subtraction') operands.sort((a, b) => a - b);\r\n\r\n    // 5. Push the problem maximum value to the appropriate place depend on operation (addition/subtraction)\r\n    operands.splice(\r\n      operation === 'addition' ? operands.length : 0,\r\n      0,\r\n      problemMaximum\r\n    );\r\n\r\n    console.log(`%c operands from \"double-and-single-digits\" ===> `, 'color: orange; font-weight: bold;', operands);\r\n\r\n    return operands;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default doubleDigitAndTens;","import randomInteger from '../randoms/get-random-integer-in-a-range';\r\n\r\n/**\r\n * \r\n */\r\nconst doubleDigitOperands = (operation, numberOfOperands) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    // 1. Generate problem maximum with limits min=0+numberOfOperands, max=10\r\n    const problemMaximum = randomInteger(11 + (parseInt(numberOfOperands) * 11), 99);\r\n    // let problemMaximum = 0;\r\n\r\n    const operands = [];\r\n    let operand = 0;\r\n    let problemSum = 0;\r\n\r\n    // 2. Loop with length <numberOfOperands>-1\r\n    for (let i = 0; i < numberOfOperands - 1; i++) {\r\n\r\n      // 3. Generate operand with limits min=0 (or 1), max=sum-problemTotal\r\n      operand = randomInteger(11, problemMaximum - problemSum - 11);\r\n      problemSum += operand;\r\n\r\n      // 4. Push operand into problems array\r\n      operands.push(operand);\r\n    }\r\n\r\n    // in case of addition sort array to add less to the bigger\r\n    operands.push(problemMaximum - problemSum);\r\n\r\n    // 5. Push the problem maximum value to the appropriate place depend on operation (addition/subtraction)\r\n    operands.splice(\r\n      operation === 'addition' ? operands.length : 0,\r\n      0,\r\n      problemMaximum\r\n    );\r\n\r\n    console.log(`%c operands from \"double-and-single-digits\" ===> `, 'color: orange; font-weight: bold;', operands);\r\n\r\n    return operands;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default doubleDigitOperands;","import randomInteger from '../randoms/get-random-integer-in-a-range';\r\n\r\n/**\r\n * \r\n */\r\nconst doubleDigitTidingUp = (operation, numberOfOperands) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    // 1. Generate problem maximum with limits min=0+numberOfOperands, max=10\r\n    let problemMaximum = 0;\r\n\r\n    const operands = [];\r\n    let operand = 0;\r\n\r\n    // 2. Loop with length <numberOfOperands>-1\r\n    for (let i = 0; i < numberOfOperands; i++) {\r\n\r\n      // 3. Generate operand with limits min=0 (or 1), max=sum-problemTotal\r\n      if (i > 0) {\r\n        // Getting compensation within of range from -3 to 3, distinctive from 0\r\n        let compensation;\r\n        while (!compensation) compensation = randomInteger(-3, 3);\r\n        \r\n        operand = randomInteger(1, 9) * 10 - compensation;\r\n        problemMaximum += parseInt(operand);\r\n      } else {\r\n        operand = randomInteger(11, 99);\r\n        problemMaximum += parseInt(operand);\r\n      }\r\n\r\n      // 4. Push operand into problems array\r\n      operands.push(operand);\r\n    }\r\n\r\n    // in case of addition sort array to add less to the bigger\r\n    if (operation === 'subtraction') operands.sort((a, b) => a - b);\r\n\r\n    // 5. Push the problem maximum value to the appropriate place depend on operation (addition/subtraction)\r\n    operands.splice(\r\n      operation === 'addition' ? operands.length : 0,\r\n      0,\r\n      problemMaximum\r\n    );\r\n\r\n    console.log(`%c operands from \"double-and-single-digits\" ===> `, 'color: orange; font-weight: bold;', operands);\r\n\r\n    return operands;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default doubleDigitTidingUp;","import upToTen from '../operands-generators/up-to-ten';\r\nimport singleDigitOperands from '../operands-generators/single-digit-operands';\r\nimport twoAndSingleDigits from '../operands-generators/two-and-single-digits';\r\nimport twoDigitAndTens from '../operands-generators/two-digit-and-tens';\r\nimport twoDigitOperands from '../operands-generators/two-digit-operands';\r\nimport twoDigitTidyngUp from '../operands-generators/two-digit-tidying-up';\r\n\r\n/**\r\n * \r\n */\r\nconst operandsFactory = (type) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of problem-controller ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemDescriptions\r\n    // );\r\n\r\n    let processor;\r\n\r\n    switch (type) {\r\n      case 'up to ten':\r\n        processor = upToTen;\r\n        break;\r\n      case 'single digit operands':\r\n        processor = singleDigitOperands;\r\n        break;\r\n      case 'two- and single- digit':\r\n        processor = twoAndSingleDigits;\r\n        break;\r\n      case 'two-digit and tens':\r\n        processor = twoDigitAndTens;\r\n        break;\r\n      case 'two-digit operands':\r\n        processor = twoDigitOperands;\r\n        break;\r\n      case 'two-digit tidying up':\r\n        processor = twoDigitTidyngUp;\r\n        break;\r\n      // case 'tens withing thousand':\r\n      //   processor = upToTen;\r\n      //   break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    console.log('%c processor from get-processor ===> ', 'color: violet; font-weight: bold;', processor);\r\n    return processor;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default operandsFactory;","import getInputPosition from './get-input-position';\r\nimport operandsFactory from './operands-factory';\r\n\r\n/**\r\n * \r\n */\r\nconst problemsFactory = (type, operation, numberOfOperands = 2, missing, quantity) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of addition-problem-generator ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemType,\r\n    //   numberOfOperands,\r\n    //   numberOfProblems\r\n    // );\r\n\r\n    const processor = operandsFactory(type);\r\n\r\n    let problems = [];\r\n\r\n    let problem;\r\n\r\n    for (let q = 0; q < quantity; q++) {\r\n\r\n      problem = [];\r\n\r\n      const operands = processor(operation, numberOfOperands);\r\n      \r\n      // 6. Identify missing.\r\n      let input = getInputPosition(numberOfOperands, missing);\r\n\r\n      // 7. Formatting the problem with the defined operands and operator.\r\n      for (let i = 0; i < operands.length; i++) {\r\n\r\n        if (i > 0) {\r\n          problem.push({\r\n            type: 'sign',\r\n            value: i === operands.length - 1 ?\r\n              '=' :\r\n              operation === 'addition' ? '+' : '-'\r\n          });\r\n        }\r\n        problem.push({\r\n          type: input === i ? 'input' : 'operand',\r\n          value: operands[i]\r\n        });\r\n      }\r\n\r\n      console.log(`%c ${operation} problem from \"problems-builder\" ===> `, 'color: blue; font-weight: bold;', problem);\r\n\r\n      problems.push(problem);\r\n    }\r\n\r\n    console.log('%c problems from \"problems-builder\" ===> ', 'color: orange; font-weight: bold;', problems);\r\n\r\n    return problems;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default problemsFactory;","import problemsFactory  from './problem-processing/problems-factory';\r\n\r\n/**\r\n * \r\n */\r\n const problemsController = (problemDescriptions) => {\r\n\r\n  try {\r\n    // console.log(\r\n    //   '%c arguments of problem-controller ===> ',\r\n    //   'color: orangered; font-weight: bold;',\r\n    //   problemDescriptions\r\n    // );\r\n    const problems = [];\r\n\r\n    problemDescriptions.forEach(type => {\r\n\r\n      problems.push(...problemsFactory(\r\n        type.type,\r\n        type.operation,\r\n        type.numberOfOperands,\r\n        type.missing,\r\n        type.quantity\r\n      ));\r\n\r\n    });\r\n\r\n    console.log('%c problems from problem-controller ===> ', 'color: yellowgreen; font-weight: bold;', problems, ' time stamp ===> ', new Date() / 1e3 | 0);\r\n    return problems;\r\n  }\r\n  catch (e) {\r\n    throw new Error(e);\r\n  }\r\n};\r\n\r\nexport default problemsController;","import React from 'react';\r\n\r\nconst useTraceUpdate = (props) => {\r\n  const prev = React.useRef(props);\r\n  React.useEffect(() => {\r\n    const changedProps = Object.entries(props).reduce((ps, [k, v]) => {\r\n      if (prev.current[k] !== v) {\r\n        ps[k] = [prev.current[k], v];\r\n      }\r\n      return ps;\r\n    }, {});\r\n    if (Object.keys(changedProps).length > 0) {\r\n      console.log('Changed props:', changedProps);\r\n    }\r\n    prev.current = props;\r\n  });\r\n};\r\n// console.log('%c inside useTraceUpdate', 'font-size: bold; color: red;')\r\n\r\nexport default useTraceUpdate;","import React from 'react';\r\n\r\n// import useClickOutside from '../../utils/use-click-outside/useClickOutside';\r\n// import problems from './problems';\r\n\r\nimport NavigationBar from '../../components/navigation/navigation-bar/navigation-bar.component';\r\nimport Header from '../../components/headers/addition-subtraction/header.component';\r\nimport Settings from '../../components/settings/settings.component';\r\nimport Problems from '../../components/addition-subtraction/problems/problems.component';\r\nimport Footer from '../../components/footer/footer.component';\r\n\r\nimport problemController from '../../components/math/problems-controller';\r\n// import * as problemController from '../../components/math/problems-controller';\r\n\r\nimport initialProblemSettings from './initial-problem-settings';\r\n\r\nimport useTraceUpdate from '../../utils/state-update-tracer/state-update-tracer';\r\n\r\nconst AdditionSubtraction = (props) => {\r\n\t/**\r\n   * Single state hook useState for all the state properties\r\n\t * \r\n\t * PROBLEM PARAMETRES: \r\n\t * operation: <addition>, <subtraction>\r\n\t * missing: <result>, <missingFirst>, <missingLast>, <random>\r\n\t * type: <up-to-10>, ...\r\n\t * numberOfOperands: <Number>\r\n\t * quantity: <Number>\r\n   */\r\n\r\n\tconst [ fullState, setFullState ] = React.useState({\r\n\t\tproblemSettings: initialProblemSettings,\r\n\t\tcolsPerRow: 2\r\n\t});\r\n\r\n\t// console.log(\r\n\t// \t'%c problemSettings from the fullState of addition-subtraction-page ===> ',\r\n\t// \t'color: orangered; font-weight: bold;',\r\n\t// \tfullState.problemSettings\r\n\t// );\r\n\r\n\t/**\r\n\t * \r\n\t * @param {Object} settings - passing parameter from the settings component\r\n\t * \r\n\t * For details see: \r\n\t * https://stackoverflow.com/questions/40722382/how-to-pass-state-back-to-parent-in-react\r\n\t */\r\n\tconst getSettings = (settings) => {\r\n\r\n\t\tsetFullState({\r\n\t\t\t...fullState,\r\n\t\t\tproblemSettings: settings\r\n\t\t});\r\n\t};\r\n\r\n\tuseTraceUpdate(props);\r\n\r\n\t// console.log('random numbers from addition-subtraction page ===> ', random(0, 99));\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<NavigationBar />\r\n\t\t\t<Header />\r\n\t\t\t<main className=\"problem__main\">\r\n\t\t\t\t<Settings sendData={getSettings} settings={fullState.problemSettings}/>\r\n\t\t\t\t<Problems problems={problemController(fullState.problemSettings)} columns={fullState.colsPerRow} />\r\n\t\t\t</main>\r\n\t\t\t<Footer />\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default AdditionSubtraction;\r\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MultiplicationTab from './pages/multiplication-tab/multiplication-tab.page';\nimport AdditionSubtraction from './pages/addition-subtraction/addition-subtraction.page';\n\n// import PrivateRoute from './hoc/private-route/private-route.hoc';\n// import PublicRoute from './hoc/public-route/public-route.hoc';\n\n\n/**\n * router adapted for github pages, see detailed eplanations at:\n * https://stackoverflow.com/questions/57883297/deploying-reactjs-website-on-github-pages-with-routing-results-in-404-error-on-r\n * https://github.com/facebook/create-react-app/issues/1765\n */\nconst Routes = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route path=\"/\" exact component={MultiplicationTab} />\n\t\t\t<Route path=\"/multiplication-tab\" exact component={MultiplicationTab} />\n\t\t\t<Route path=\"/addition-subtraction\" exact component={AdditionSubtraction} />\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { HashRouter } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nimport Routes from './routes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}